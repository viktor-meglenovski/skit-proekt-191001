<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2fa3de76-57b8-4aea-975c-757ada42cbfd" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnick.iml" beforeDir="false" afterPath="$PROJECT_DIR$/dnick.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/config/DataInitializer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/config/DataInitializer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/model/Question.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/model/Question.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/model/TopicUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/model/TopicUser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/BadgeService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/BadgeService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/TestResultService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/TestResultService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/TopicService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/TopicService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/AuthServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/AuthServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/BadgeServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/BadgeServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/TestResultServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/TestResultServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/TopicServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/prototype/hifi/dnick/service/impl/TopicServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/config/DataInitializer.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/config/DataInitializer.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/model/Question.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/model/Question.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/model/TopicUser.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/model/TopicUser.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/BadgeService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/BadgeService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/TestResultService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/TestResultService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/TopicService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/TopicService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/AuthServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/AuthServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/BadgeServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/BadgeServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/TestResultServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/TestResultServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/TestServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/TestServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/TopicServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/TopicServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/UserServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/prototype/hifi/dnick/service/impl/UserServiceImpl.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="2BkiLhPObNQizvBLEDlF32JX0DA" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RequestMappingsPanelOrder0" value="0" />
    <property name="RequestMappingsPanelOrder1" value="1" />
    <property name="RequestMappingsPanelWidth0" value="75" />
    <property name="RequestMappingsPanelWidth1" value="75" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/pom.xml" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RunManager" selected="PIT Runner.ServicesImplementationMutationTesting">
    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
      <option name="arquillianRunConfiguration">
        <value>
          <option name="containerStateName" value="" />
        </value>
      </option>
      <option name="TEST_OBJECT" value="CLASS" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BadgeServiceMutationTesting" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="dnick" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="prototype.hifi.dnick.mutants.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="prototype.hifi.dnick.mutants" />
      <option name="MAIN_CLASS_NAME" value="prototype.hifi.dnick.mutants.BadgeServiceMutationTesting" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BadgeServiceMutationTesting.testCheckForOneTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="dnick" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="prototype.hifi.dnick.mutants.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="prototype.hifi.dnick.mutants" />
      <option name="MAIN_CLASS_NAME" value="prototype.hifi.dnick.mutants.BadgeServiceMutationTesting" />
      <option name="METHOD_NAME" value="testCheckForOneTest" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BadgeServiceMutationTesting.testCheckForScore100" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="dnick" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="prototype.hifi.dnick.mutants.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="prototype.hifi.dnick.mutants" />
      <option name="MAIN_CLASS_NAME" value="prototype.hifi.dnick.mutants.BadgeServiceMutationTesting" />
      <option name="METHOD_NAME" value="testCheckForScore100" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestResultServiceMutationTesting" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="dnick" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="prototype.hifi.dnick.mutants.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="prototype.hifi.dnick.mutants" />
      <option name="MAIN_CLASS_NAME" value="prototype.hifi.dnick.mutants.TestResultServiceMutationTesting" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestResultServiceMutationTesting.testGetNumberOfTestsForUser" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="dnick" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="prototype.hifi.dnick.mutants.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="prototype.hifi.dnick.mutants" />
      <option name="MAIN_CLASS_NAME" value="prototype.hifi.dnick.mutants.TestResultServiceMutationTesting" />
      <option name="METHOD_NAME" value="testGetNumberOfTestsForUser" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ServicesImplementationMutationTesting" type="PIT" factoryName="PIT Runner" REPORT_DIR="$PROJECT_DIR$/target/report" SOURCE_DIRS="$PROJECT_DIR$/src/main/java" TARGET_CLASSES="prototype.hifi.dnick.service.impl.*" TARGET_TESTS="prototype.hifi.dnick.mutants.*" otherParams="--outputFormats XML,HTML">
      <module name="dnick" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DnickApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="dnick" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="prototype.hifi.dnick.DnickApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="JUnit.TestResultServiceMutationTesting" />
      <item itemvalue="JUnit.TestResultServiceMutationTesting.testGetNumberOfTestsForUser" />
      <item itemvalue="JUnit.BadgeServiceMutationTesting" />
      <item itemvalue="JUnit.BadgeServiceMutationTesting.testCheckForScore100" />
      <item itemvalue="JUnit.BadgeServiceMutationTesting.testCheckForOneTest" />
      <item itemvalue="PIT Runner.ServicesImplementationMutationTesting" />
      <item itemvalue="Spring Boot.DnickApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.BadgeServiceMutationTesting" />
        <item itemvalue="JUnit.BadgeServiceMutationTesting.testCheckForScore100" />
        <item itemvalue="JUnit.BadgeServiceMutationTesting.testCheckForOneTest" />
        <item itemvalue="JUnit.TestResultServiceMutationTesting.testGetNumberOfTestsForUser" />
        <item itemvalue="JUnit.TestResultServiceMutationTesting" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2fa3de76-57b8-4aea-975c-757ada42cbfd" name="Default Changelist" comment="" />
      <created>1657456431134</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1657456431134</updated>
      <workItem from="1657456433031" duration="6345000" />
      <workItem from="1657462881993" duration="8376000" />
      <workItem from="1657475999509" duration="6285000" />
      <workItem from="1657533183340" duration="2214000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
</project>